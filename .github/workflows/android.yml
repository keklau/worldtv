name: WorldTV – V3.2d (HTTP clair autorisé + UA Xtream)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Gradle 8.7
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7
          cache-read-only: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Generate Android project (V3.2d)
        run: |
          set -e
          mkdir -p app/src/main/java/com/worldtv/xtream
          mkdir -p app/src/main/java/com/worldtv/stb
          mkdir -p app/src/main/java/com/worldtv
          mkdir -p app/src/main/res/layout
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/res/xml

          # settings.gradle
          cat > settings.gradle <<'EOF'
          pluginManagement { repositories { gradlePluginPortal(); google(); mavenCentral() } }
          dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
            repositories { google(); mavenCentral() }
          }
          rootProject.name = "worldtv"
          include(":app")
          EOF

          # build.gradle (root)
          echo "// generated" > build.gradle

          # app/build.gradle
          cat > app/build.gradle <<'EOF'
          plugins { id 'com.android.application' version '8.5.2' }
          android {
            namespace "com.worldtv"
            compileSdk 34
            defaultConfig { applicationId "com.worldtv"; minSdk 21; targetSdk 34; versionCode 34; versionName "3.2d" }
            buildTypes { release { minifyEnabled false } }
            compileOptions { sourceCompatibility JavaVersion.VERSION_17; targetCompatibility JavaVersion.VERSION_17 }
          }
          dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.google.android.material:material:1.9.0'
            implementation 'androidx.media3:media3-exoplayer:1.4.1'
            implementation 'androidx.media3:media3-exoplayer-hls:1.4.1'
            implementation 'androidx.media3:media3-ui:1.4.1'
          }
          EOF

          # Manifest (HTTP clair + networkSecurityConfig)
          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <uses-permission android:name="android.permission.INTERNET"/>
            <application
                android:label="World TV"
                android:theme="@style/Theme.Material3.DayNight.NoActionBar"
                android:usesCleartextTraffic="true"
                android:networkSecurityConfig="@xml/network_security_config">

              <activity android:name=".ProfilesActivity" android:exported="true">
                <intent-filter>
                  <action android:name="android.intent.action.MAIN"/>
                  <category android:name="android.intent.category.LAUNCHER"/>
                </intent-filter>
              </activity>

              <activity android:name=".AddM3UActivity" android:exported="false"/>
              <activity android:name=".AddXtreamActivity" android:exported="false"/>
              <activity android:name=".AddStbActivity" android:exported="false"/>

              <activity android:name=".M3UChannelListActivity" android:exported="false"/>

              <!-- Xtream -->
              <activity android:name=".xtream.XtreamHomeActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamLiveCategoriesActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamLiveChannelsActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamVodCategoriesActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamVodListActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamSeriesCategoriesActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamSeriesListActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamSeriesEpisodesActivity" android:exported="false"/>
              <activity android:name=".xtream.XtreamReplayChannelsActivity" android:exported="false"/>

              <!-- STB proto -->
              <activity android:name=".stb.StbLiveActivity" android:exported="false"/>

              <activity android:name=".PlayerActivity" android:exported="false"/>
            </application>
          </manifest>
          EOF

          # Autoriser TOUT le HTTP clair (sans lister un domaine spécifique)
          cat > app/src/main/res/xml/network_security_config.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <network-security-config>
            <base-config cleartextTrafficPermitted="true" />
          </network-security-config>
          EOF

          # Layouts (simples)
          cat > app/src/main/res/layout/activity_profiles.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" android:padding="16dp"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <LinearLayout android:orientation="horizontal"
                  android:layout_width="match_parent" android:layout_height="wrap_content">
                  <Button android:id="@+id/btn_add_m3u" android:text="+ M3U"
                      android:layout_width="0dp" android:layout_weight="1" android:layout_height="wrap_content"/>
                  <Button android:id="@+id/btn_add_xtream" android:text="+ Xtream"
                      android:layout_width="0dp" android:layout_weight="1" android:layout_height="wrap_content"
                      android:layout_marginStart="8dp"/>
                  <Button android:id="@+id/btn_add_stb" android:text="+ STB"
                      android:layout_width="0dp" android:layout_weight="1" android:layout_height="wrap_content"
                      android:layout_marginStart="8dp"/>
              </LinearLayout>
              <TextView android:text="Profils (tap = ouvrir, long tap = supprimer)"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:paddingTop="12dp"/>
              <ListView android:id="@+id/list_profiles" android:layout_width="match_parent"
                  android:layout_height="0dp" android:layout_weight="1"/>
          </LinearLayout>
          EOF

          cat > app/src/main/res/layout/activity_add_m3u.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" android:padding="16dp"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <EditText android:id="@+id/ed_name" android:hint="Nom du profil"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <EditText android:id="@+id/ed_url" android:hint="URL M3U/M3U8" android:inputType="textUri"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <Button android:id="@+id/btn_save" android:text="Enregistrer"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
          </LinearLayout>
          EOF

          cat > app/src/main/res/layout/activity_add_xtream.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" android:padding="16dp"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <EditText android:id="@+id/ed_name" android:hint="Nom du profil"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <EditText android:id="@+id/ed_host" android:hint="http://host:port" android:inputType="textUri"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <EditText android:id="@+id/ed_user" android:hint="username"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <EditText android:id="@+id/ed_pass" android:hint="password" android:inputType="textPassword"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <Button android:id="@+id/btn_save" android:text="Enregistrer"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
          </LinearLayout>
          EOF

          cat > app/src/main/res/layout/activity_add_stb.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" android:padding="16dp"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <EditText android:id="@+id/ed_name" android:hint="Nom du profil"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <EditText android:id="@+id/ed_portal" android:hint="URL portail (ou playlist M3U)" android:inputType="textUri"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <EditText android:id="@+id/ed_mac" android:hint="MAC (optionnel)"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <Button android:id="@+id/btn_save" android:text="Enregistrer (STB)"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
          </LinearLayout>
          EOF

          cat > app/src/main/res/layout/activity_channel_list.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" android:padding="0dp"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <ListView android:id="@+id/list" android:layout_width="match_parent" android:layout_height="match_parent"/>
          </LinearLayout>
          EOF

          cat > app/src/main/res/layout/activity_player.xml <<'EOF'
          <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <androidx.media3.ui.PlayerView
                  android:id="@+id/player_view"
                  android:layout_width="match_parent"
                  android:layout_height="match_parent"/>
          </FrameLayout>
          EOF

          cat > app/src/main/res/layout/activity_xtream_home.xml <<'EOF'
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" android:padding="20dp"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <Button android:id="@+id/btn_live" android:text="Live" android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <Button android:id="@+id/btn_vod" android:text="Films (VOD)" android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
              <Button android:id="@+id/btn_series" android:text="Séries" android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
              <Button android:id="@+id/btn_replay" android:text="Replay (timeshift)" android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
          </LinearLayout>
          EOF

          # strings
          echo '<resources><string name="app_name">World TV</string></resources>' > app/src/main/res/values/strings.xml

          # ===== Utils & core screens =====
          cat > app/src/main/java/com/worldtv/ProfileManager.java <<'EOF'
          package com.worldtv;
          import android.content.*; import org.json.*;
          public class ProfileManager {
            private static final String PREF="worldtv_profiles", KEY="profiles_json";
            public static JSONArray load(Context c){ String s=c.getSharedPreferences(PREF,0).getString(KEY,"[]");
              try{return new JSONArray(s);}catch(Exception e){return new JSONArray();}}
            public static void save(Context c, JSONArray a){ c.getSharedPreferences(PREF,0).edit().putString(KEY,a.toString()).apply(); }
            public static void addProfile(Context c, JSONObject o){ JSONArray a=load(c); a.put(o); save(c,a); }
            public static void removeById(Context c,long id){ JSONArray a=load(c),b=new JSONArray();
              for(int i=0;i<a.length();i++){ JSONObject o=a.optJSONObject(i); if(o!=null&&o.optLong("id",-1)!=id) b.put(o);} save(c,b); }
          }
          EOF

          cat > app/src/main/java/com/worldtv/M3UParser.java <<'EOF'
          package com.worldtv; import java.util.*;
          public class M3UParser {
            public static ArrayList<String[]> parse(String t){ ArrayList<String[]> out=new ArrayList<>(); String name=null;
              for(String L:t.split("\\r?\\n")){ L=L.trim();
                if(L.startsWith("#EXTINF:")){ int k=L.indexOf(","); name=(k>=0&&k+1<L.length())?L.substring(k+1).trim():"Sans nom";}
                else if(!L.isEmpty() && !L.startsWith("#")){ out.add(new String[]{name==null?"Sans nom":name,L}); name=null; } }
              return out; }
          }
          EOF

          cat > app/src/main/java/com/worldtv/ProfilesActivity.java <<'EOF'
          package com.worldtv;
          import android.app.*; import android.os.*; import android.content.*; import android.widget.*; import org.json.*; import java.util.*;
          public class ProfilesActivity extends Activity {
            ListView list; JSONArray data;
            protected void onCreate(Bundle b){ super.onCreate(b); setContentView(R.layout.activity_profiles);
              list=findViewById(R.id.list_profiles);
              findViewById(R.id.btn_add_m3u).setOnClickListener(v->startActivity(new Intent(this,AddM3UActivity.class)));
              findViewById(R.id.btn_add_xtream).setOnClickListener(v->startActivity(new Intent(this,AddXtreamActivity.class)));
              findViewById(R.id.btn_add_stb).setOnClickListener(v->startActivity(new Intent(this,AddStbActivity.class)));
              list.setOnItemClickListener((a,v,pos,id)->open(pos));
              list.setOnItemLongClickListener((a,v,pos,id)->{del(pos); return true;});
            }
            protected void onResume(){ super.onResume(); refresh(); }
            void refresh(){ data=ProfileManager.load(this);
              java.util.ArrayList<String> names=new java.util.ArrayList<>();
              for(int i=0;i<data.length();i++){ JSONObject o=data.optJSONObject(i);
                names.add(o.optString("type","?")+" • "+o.optString("name","Sans nom")); }
              list.setAdapter(new ArrayAdapter<>(this,android.R.layout.simple_list_item_1,names));
            }
            void open(int pos){ JSONObject o=data.optJSONObject(pos); if(o==null)return;
              String type=o.optString("type","");
              if("M3U".equals(type)){ Intent i=new Intent(this,M3UChannelListActivity.class); i.putExtra("url",o.optString("url","")); startActivity(i); }
              else if("XTREAM".equals(type)){ Intent i=new Intent(this, com.worldtv.xtream.XtreamHomeActivity.class);
                i.putExtra("host",o.optString("host","")); i.putExtra("user",o.optString("user","")); i.putExtra("pass",o.optString("pass","")); startActivity(i); }
              else if("STB".equals(type)){ Intent i=new Intent(this, com.worldtv.stb.StbLiveActivity.class);
                i.putExtra("portal",o.optString("portal","")); startActivity(i); }
            }
            void del(int pos){ JSONObject o=data.optJSONObject(pos); if(o==null)return;
              long id=o.optLong("id",-1);
              new AlertDialog.Builder(this).setTitle("Supprimer ?").setMessage(o.optString("name",""))
                .setPositiveButton("Supprimer",(d,w)->{ProfileManager.removeById(this,id);refresh();})
                .setNegativeButton("Annuler",null).show();
            }
          }
          EOF

          cat > app/src/main/java/com/worldtv/AddM3UActivity.java <<'EOF'
          package com.worldtv; import android.app.*; import android.os.*; import android.widget.*; import org.json.*;
          public class AddM3UActivity extends Activity {
            protected void onCreate(Bundle b){ super.onCreate(b); setContentView(R.layout.activity_add_m3u);
              EditText name=findViewById(R.id.ed_name), url=findViewById(R.id.ed_url);
              findViewById(R.id.btn_save).setOnClickListener(v->{ try{
                JSONObject o=new JSONObject(); o.put("id",System.currentTimeMillis()); o.put("type","M3U");
                o.put("name",name.getText().toString().trim()); o.put("url",url.getText().toString().trim());
                ProfileManager.addProfile(this,o); Toast.makeText(this,"Profil M3U ajouté",Toast.LENGTH_SHORT).show(); finish();
              }catch(Exception e){ Toast.makeText(this,e.getMessage(),Toast.LENGTH_LONG).show(); }});
            }
          }
          EOF

          cat > app/src/main/java/com/worldtv/AddXtreamActivity.java <<'EOF'
          package com.worldtv; import android.app.*; import android.os.*; import android.widget.*; import org.json.*;
          public class AddXtreamActivity extends Activity {
            protected void onCreate(Bundle b){ super.onCreate(b); setContentView(R.layout.activity_add_xtream);
              EditText n=findViewById(R.id.ed_name), h=findViewById(R.id.ed_host), u=findViewById(R.id.ed_user), p=findViewById(R.id.ed_pass);
              findViewById(R.id.btn_save).setOnClickListener(v->{ try{
                JSONObject o=new JSONObject(); o.put("id",System.currentTimeMillis()); o.put("type","XTREAM");
                o.put("name",n.getText().toString().trim()); o.put("host",h.getText().toString().trim());
                o.put("user",u.getText().toString().trim()); o.put("pass",p.getText().toString().trim());
                ProfileManager.addProfile(this,o); Toast.makeText(this,"Profil Xtream ajouté",Toast.LENGTH_SHORT).show(); finish();
              }catch(Exception e){ Toast.makeText(this,e.getMessage(),Toast.LENGTH_LONG).show(); }});
            }
          }
          EOF

          cat > app/src/main/java/com/worldtv/AddStbActivity.java <<'EOF'
          package com.worldtv; import android.app.*; import android.os.*; import android.widget.*; import org.json.*;
          public class AddStbActivity extends Activity {
            protected void onCreate(Bundle b){ super.onCreate(b); setContentView(R.layout.activity_add_stb);
              EditText n=findViewById(R.id.ed_name), portal=findViewById(R.id.ed_portal), mac=findViewById(R.id.ed_mac);
              findViewById(R.id.btn_save).setOnClickListener(v->{ try{
                JSONObject o=new JSONObject(); o.put("id",System.currentTimeMillis()); o.put("type","STB");
                o.put("name",n.getText().toString().trim()); o.put("portal",portal.getText().toString().trim()); o.put("mac",mac.getText().toString().trim());
                ProfileManager.addProfile(this,o); Toast.makeText(this,"Profil STB ajouté",Toast.LENGTH_SHORT).show(); finish();
              }catch(Exception e){ Toast.makeText(this,e.getMessage(),Toast.LENGTH_LONG).show(); }});
            }
          }
          EOF

          cat > app/src/main/java/com/worldtv/M3UChannelListActivity.java <<'EOF'
          package com.worldtv; import android.app.*; import android.os.*; import android.widget.*; import android.content.*; import java.net.*; import java.io.*; import java.nio.charset.StandardCharsets; import java.util.*;
          public class M3UChannelListActivity extends ListActivity {
            ArrayList<String[]> items=new ArrayList<>();
            protected void onCreate(Bundle b){ super.onCreate(b);
              String url=getIntent().getStringExtra("url");
              if(url==null||url.isEmpty()){ Toast.makeText(this,"URL M3U manquante",Toast.LENGTH_LONG).show(); finish(); return; }
              new Thread(()->{ try{
                HttpURLConnection c=(HttpURLConnection)new URL(url).openConnection(); c.setConnectTimeout(10000); c.setReadTimeout(20000);
                InputStream is=c.getInputStream(); String text=new String(is.readAllBytes(),StandardCharsets.UTF_8);
                items=M3UParser.parse(text); runOnUiThread(this::populate);
              }catch(Exception e){ runOnUiThread(()->{ Toast.makeText(this,"Erreur M3U: "+e.getMessage(),Toast.LENGTH_LONG).show(); finish();}); }}).start();
            }
            void populate(){ ArrayList<String> names=new ArrayList<>(); for(String[] it:items) names.add(it[0]);
              setListAdapter(new ArrayAdapter<>(this,android.R.layout.simple_list_item_1,names)); }
            protected void onListItemClick(ListView l, android.view.View v, int pos, long id){
              Intent i=new Intent(this, PlayerActivity.class); i.putExtra("url", items.get(pos)[1]); startActivity(i);
            }
          }
          EOF

          cat > app/src/main/java/com/worldtv/PlayerActivity.java <<'EOF'
          package com.worldtv;
          import android.net.*; import android.os.*; import androidx.appcompat.app.AppCompatActivity;
          import androidx.media3.common.*; import androidx.media3.exoplayer.ExoPlayer; import androidx.media3.ui.PlayerView;
          public class PlayerActivity extends AppCompatActivity {
            private ExoPlayer player;
            protected void onCreate(Bundle b){ super.onCreate(b); setContentView(R.layout.activity_player);
              String url=getIntent().getStringExtra("url");
              if(url==null||url.isEmpty()) url="https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8";
              player=new ExoPlayer.Builder(this).build();
              PlayerView pv=findViewById(R.id.player_view); pv.setPlayer(player);
              player.setMediaItem(MediaItem.fromUri(Uri.parse(url))); player.prepare(); player.play();
            }
            protected void onDestroy(){ super.onDestroy(); if(player!=null){ player.release(); player=null; } }
          }
          EOF

          # ===== Xtream avec User-Agent + normalisation host =====
          cat > app/src/main/java/com/worldtv/xtream/XtreamApi.java <<'EOF'
          package com.worldtv.xtream;
          import org.json.*; import java.net.*; import java.io.*; import java.nio.charset.StandardCharsets;
          public class XtreamApi {
            private final String base; private final String user, pass;
            public XtreamApi(String host,String user,String pass){
              String h = host==null? "": host.trim();
              if (!h.startsWith("http://") && !h.startsWith("https://")) h = "http://" + h;
              this.base = h.endsWith("/")? h : h + "/";
              this.user = user==null? "": user.trim();
              this.pass = pass==null? "": pass.trim();
            }
            private String enc(String s) throws Exception { return URLEncoder.encode(s,"UTF-8"); }
            private String get(String urlStr) throws Exception {
              HttpURLConnection c=(HttpURLConnection)new URL(urlStr).openConnection();
              c.setInstanceFollowRedirects(true);
              c.setConnectTimeout(15000); c.setReadTimeout(30000);
              c.setRequestProperty("User-Agent","VLC/3.0 LibVLC/3.0");
              int code=c.getResponseCode();
              InputStream is=(code>=200&&code<300)?c.getInputStream():c.getErrorStream();
              String body=new String(is.readAllBytes(),StandardCharsets.UTF_8);
              if(code<200||code>=300) throw new IOException("HTTP "+code+": "+body);
              return body;
            }
            private String api(String action) throws Exception {
              return base+"player_api.php?username="+enc(user)+"&password="+enc(pass)+action;
            }
            public JSONArray getLiveCategories() throws Exception { return new JSONArray(get(api("&action=get_live_categories"))); }
            public JSONArray getLiveStreams(String categoryId) throws Exception { return new JSONArray(get(api("&action=get_live_streams&category_id="+enc(categoryId)))); }
            public String buildLiveUrl(int streamId, boolean useTs){ return base+"live/"+user+"/"+pass+"/"+streamId+(useTs?".ts":".m3u8"); }
            public JSONArray getVodCategories() throws Exception { return new JSONArray(get(api("&action=get_vod_categories"))); }
            public JSONArray getVodStreams(String categoryId) throws Exception { return new JSONArray(get(api("&action=get_vod_streams&category_id="+enc(categoryId)))); }
            public String buildVodUrl(int streamId, String ext){ if(ext==null||ext.isEmpty()) ext="mp4"; return base+"movie/"+user+"/"+pass+"/"+streamId+"."+ext; }
            public JSONArray getSeriesCategories() throws Exception { return new JSONArray(get(api("&action=get_series_categories"))); }
            public JSONArray getSeriesByCat(String catId) throws Exception { return new JSONArray(get(api("&action=get_series&category_id="+enc(catId)))); }
            public JSONObject getSeriesInfo(int seriesId) throws Exception { return new JSONObject(get(api("&action=get_series_info&series_id="+seriesId))); }
            public String buildEpisodeUrl(int seriesId,int season,int episode,String ext){ if(ext==null||ext.isEmpty()) ext="mp4"; return base+"series/"+user+"/"+pass+"/"+seriesId+"/"+season+"/"+episode+"."+ext; }
            public String buildReplayUrl(int streamId,String start,int duration){ return base+"streaming/timeshift.php?username="+user+"&password="+pass+"&stream="+streamId+"&start="+start+"&duration="+duration; }
          }
          EOF

          cat > app/src/main/java/com/worldtv/xtream/XtreamHomeActivity.java <<'EOF'
          package com.worldtv.xtream;
          import android.app.Activity; import android.os.Bundle; import android.content.Intent;
          import com.worldtv.R;
          public class XtreamHomeActivity extends Activity {
            String host,user,pass;
            protected void onCreate(Bundle b){ super.onCreate(b); setContentView(R.layout.activity_xtream_home);
              host=getIntent().getStringExtra("host"); user=getIntent().getStringExtra("user"); pass=getIntent().getStringExtra("pass");
              findViewById(R.id.btn_live).setOnClickListener(v->{ Intent i=new Intent(this, XtreamLiveCategoriesActivity.class); i.putExtra("host",host); i.putExtra("user",user); i.putExtra("pass",pass); startActivity(i); });
              findViewById(R.id.btn_vod).setOnClickListener(v->{ Intent i=new Intent(this, XtreamVodCategoriesActivity.class); i.putExtra("host",host); i.putExtra("user",user); i.putExtra("pass",pass); startActivity(i); });
              findViewById(R.id.btn_series).setOnClickListener(v->{ Intent i=new Intent(this, XtreamSeriesCategoriesActivity.class); i.putExtra("host",host); i.putExtra("user",user); i.putExtra("pass",pass); startActivity(i); });
              findViewById(R.id.btn_replay).setOnClickListener(v->{ Intent i=new Intent(this, XtreamReplayChannelsActivity.class); i.putExtra("host",host); i.putExtra("user",user); i.putExtra("pass",pass); startActivity(i); });
            }
          }
          EOF

          cat > app/src/main/java/com/worldtv/xtream/XtreamLiveCategoriesActivity.java <<'EOF'
          package com.worldtv.xtream;
          import android.app.*; import android.os.*; import android.widget.*; import android.content.*; import org.json.*; import java.util.*;
          public class XtreamLiveCategoriesActivity extends ListActivity {
            XtreamApi api; ArrayList<String> names=new ArrayList<>(), ids=new ArrayList<>();
            protected void onCreate(Bundle b){ super.onCreate(b);
              api=new XtreamApi(getIntent().getStringExtra("host"), getIntent().getStringExtra("user"), getIntent().getStringExtra("pass"));
              new Thread(()->{ try{
                JSONArray arr=api.getLiveCategories(); names.clear(); ids.clear();
                for(int i=0;i<arr.length();i++){ JSONObject o=arr.optJSONObject(i); if(o==null)continue;
                  names.add(o.optString("category_name","Sans nom")); ids.add(o.optString("category_id","0")); }
                runOnUiThread(()-> setListAdapter(new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, names)));
              }catch(Exception e){ runOnUiThread(()->{ Toast.makeText(this,"Catégories Live: "+e.getMessage(),Toast.LENGTH_LONG).show(); finish();}); }}).start();
            }
            protected void onListItemClick(ListView l, android.view.View v, int pos, long id){
              Intent i=new Intent(this, XtreamLiveChannelsActivity.class);
              i.putExtra("host", getIntent().getStringExtra("host"));
              i.putExtra("user", getIntent().getStringExtra("user"));
              i.putExtra("pass", getIntent().getStringExtra("pass"));
              i.putExtra("catId", ids.get(pos)); startActivity(i);
            }
          }
          EOF

          cat > app/src/main/java/com/worldtv/xtream/XtreamLiveChannelsActivity.java <<'EOF'
          package com.worldtv.xtream;
          import android.app.*; import android.os.*; import android.widget.*; import android.content.*; import org.json.*; import java.util.*;
          public class XtreamLiveChannelsActivity extends ListActivity {
            XtreamApi api; ArrayList<String> names=new ArrayList<>(); ArrayList<Integer> ids=new ArrayList<>();
            protected void onCreate(Bundle b){ super.onCreate(b);
              api=new XtreamApi(getIntent().getStringExtra("host"), getIntent().getStringExtra("user"), getIntent().getStringExtra("pass"));
              String catId=getIntent().getStringExtra("catId");
              new Thread(()->{ try{
                JSONArray arr=api.getLiveStreams(catId); names.clear(); ids.clear();
                for(int i=0;i<arr.length();i++){ JSONObject o=arr.optJSONObject(i); if(o==null) continue;
                  names.add(o.optString("name","Sans nom")); ids.add(o.optInt("stream_id",0)); }
                runOnUiThread(()-> setListAdapter(new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, names)));
              }catch(Exception e){ runOnUiThread(()->{ Toast.makeText(this,"Xtream Streams: "+e.getMessage(),Toast.LENGTH_LONG).show(); finish();}); }}).start();
            }
            protected void onListItemClick(ListView l, android.view.View v, int pos, long id){
              boolean useTs=false; // passe à true si ton serveur refuse le .m3u8
              String url=api.buildLiveUrl(ids.get(pos), useTs);
              Intent i=new Intent(this, com.worldtv.PlayerActivity.class); i.putExtra("url", url); startActivity(i);
            }
          }
          EOF

          # VOD, Series, Replay (inchangés vs V3.2) — pour garder court ici, tu peux reprendre ceux déjà générés
          # Si tu veux que je les régénère aussi, dis-moi et je te redonne le bloc complet.

      - name: Build Debug APK
        run: gradle --no-build-cache assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: WorldTV-V3.2d-debug-apk
          path: app/build/outputs/apk/debug/*.apk
